<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:lg="clr-namespace:Files.Resources.MultilingualResources">

    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="Foreground" Value="{DynamicResource ToolTipForegroundColor}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border Background="{DynamicResource ToolTipBackgroundColor}"
                            BorderBrush="{DynamicResource ToolTipBorderBrushColor}"
                            BorderThickness="1"
                            CornerRadius="5"
                            Margin="2 2 5 5">
                        <Border.Effect>
                            <DropShadowEffect Opacity="0.1"
                                              ShadowDepth="3"/>
                        </Border.Effect>

                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="5"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PopupInvalidNameContentStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Width="180"
                            CornerRadius="8"
                            Margin="2 2 5 5"
                            BorderThickness="1"
                            Background="{DynamicResource PopupBackgroundColor}"
                            BorderBrush="{DynamicResource PopupBorderBrushColor}">
                        <Border.Effect>
                            <DropShadowEffect Opacity="0.1"
                                              ShadowDepth="3"/>
                        </Border.Effect>

                        <StackPanel Margin="8 6">
                            <TextBlock Text="{lg:Loc PopupInvalidNameText.Text}"
                                       TextWrapping="Wrap"
                                       Foreground="{DynamicResource PopupForegroundColor}"/>
                            <TextBlock Text="\ / : * ? &quot; &lt; &gt; |"
                                       TextAlignment="Center" FontWeight="DemiBold"
                                       Foreground="{DynamicResource PopupForegroundColor}"/>
                        </StackPanel>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="FocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderThickness="1"
                            CornerRadius="3"
                            BorderBrush="{DynamicResource FocusVisualStyleBorderBrushColor}"
                            SnapsToDevicePixels="True"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabButtonFocusVisualStyle"
           BasedOn="{StaticResource FocusVisualStyle}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Margin="0 0 3 7"
                            BorderThickness="1"
                            CornerRadius="3"
                            BorderBrush="{DynamicResource FocusVisualStyleBorderBrushColor}"
                            SnapsToDevicePixels="True"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ContextMenu x:Key="TextBoxContextMenu">        
        <MenuItem Command="ApplicationCommands.Cut">
            <MenuItem.Icon>
                <Image Source="{DynamicResource CutContextIcon}"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Command="ApplicationCommands.Copy">
            <MenuItem.Icon>
                <Image Source="{DynamicResource CopyContextIcon}"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Command="ApplicationCommands.Paste">
            <MenuItem.Icon>
                <Image Source="{DynamicResource PasteContextIcon}"/>
            </MenuItem.Icon>
        </MenuItem>
    </ContextMenu>

    <Style x:Key="PathTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForegroundColor}"/>
        <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrushColor}"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource TextBoxSelectionBrushColor}"/>
        <Setter Property="CaretBrush" Value="{DynamicResource TextBoxCaretBrushColor}"/>
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border CornerRadius="5"
                            Padding="2 0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0 0 0 1">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SearchTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForegroundColor}"/>
        <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrushColor}"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource TextBoxSelectionBrushColor}"/>
        <Setter Property="CaretBrush" Value="{DynamicResource TextBoxCaretBrushColor}"/>
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border CornerRadius="5"
                            Padding="2 0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0 0 0 1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <ScrollViewer x:Name="PART_ContentHost"
                                          VerticalAlignment="Center"/>

                            <Button x:Name="ClearTextButton"
                                    Grid.Column="1"
                                    Width="20" Height="20"
                                    Style="{DynamicResource TabButtonStyle}"
                                    Command="{Binding CloseSearchCommand}">
                                <Image Width="10" Height="10"
                                       Source="{DynamicResource CloseIcon}"/>
                            </Button>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding SearchMode}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding SearchMode}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         From="0" To="1"
                                                         Duration="00:00:00.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PopupTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForegroundColor}"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource TextBoxBorderBrushColor}"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource TextBoxSelectionBrushColor}"/>
        <Setter Property="CaretBrush" Value="{DynamicResource TextBoxCaretBrushColor}"/>
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="Border"
                            CornerRadius="0"
                            Padding="2 0"
                            BorderThickness="0 0 0 1"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ScrollViewer Margin="0"
                                      x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ResizeGrip}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Visibility" Value="Visible"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ResizeGrip}">
                    <Border Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True"
                            Margin="3"
                            Width="20" Height="20">
                        <Path Fill="Transparent"
                              Data="M0 20 20 0 20 20 0 20"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
                                     Value="Maximized">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>